import java.awt.Point;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;

public class Enemy {
	public int[][] map;
    public int[] pixels;
    private String imageLoc;
    public final int height;
    public final int width;
    private Point enemyLocation;
    

	public Enemy(String location, int width, int height, int[][] map) {
		super();
		this.width= width;
		this.height = height;
		this.imageLoc = location;
		this.pixels= new int [height*width];
		this.map= map;
		load();
	}
	
	private void load() {
		try {
			BufferedImage image = ImageIO.read(new File(imageLoc));
			int w = image.getWidth();
			int h = image.getHeight();
			image.getRGB(0, 0, w, h, pixels, 0, w);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	public boolean move(Camera cam) {
		while (enemyLocation.x<map[0].length||enemyLocation.x>0&&enemyLocation.y<map.length||enemyLocation.y>0) {
			Point distance = new Point();
			distance.x = (int) (enemyLocation.x - cam.xPos);
			distance.y = (int) (enemyLocation.y- cam.yPos);
			if (Math.abs(distance.x)>Math.abs(distance.y)) {
				if (distance.x>0) {
					if (map[distance.x-1][distance.y]==0) {
						enemyLocation.x--;
					}
					else {
						int[][] arr = neighbors();
						for(int i=0;i<arr.length;i++) {
							for(int j=0;j<arr[0].length;j++) {
								if (arr[i][j]==0) {
									enemyLocation.x;
									enemyLocation.y;
								}
							}
						}
						
					}
				}
				return true;
			}
			
			else {
				
			}
		}
		
	}
	private int[][] neighbors(){
		int [][] arr = new int[3][3];
		arr[1][1] = map[enemyLocation.x][enemyLocation.y];
		arr[0][0] = map[enemyLocation.x-1][enemyLocation.y-1];
		arr[0][1] = map[enemyLocation.x-1][enemyLocation.y];
		arr[0][2] = map[enemyLocation.x-1][enemyLocation.y+1];
		arr[1][0] = map[enemyLocation.x][enemyLocation.y-1];
		arr[1][2] = map[enemyLocation.x][enemyLocation.y+1];
		arr[2][0] = map[enemyLocation.x+1][enemyLocation.y-1];
		arr[2][1] = map[enemyLocation.x+1][enemyLocation.y-1];
		arr[2][2] = map[enemyLocation.x+1][enemyLocation.y+1];
		return arr;
	}
    
}
